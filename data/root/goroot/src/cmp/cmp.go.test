package cmp

type Ordered interface {
	~int | ~int8 | ~int16 | ~int32 | ~int64 |
		~uint | ~uint8 | ~uint16 | ~uint32 | ~uint64 | ~uintptr |
		~float32 | ~float64 |
		~string
}

func Or[T comparable](vals ...T) T {
	var zero T

	for _, val := range vals {
		if val != zero {
			return val
		}
	}

	return zero
}
